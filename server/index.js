const dotenv = require('dotenv');
dotenv.config();

const TelegramApi = require('node-telegram-bot-api');
const token = process.env.API_TOKEN;

if (!token) {
    console.error('–û—à–∏–±–∫–∞! API_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Å—å, —á—Ç–æ .env —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–¥–∫–ª—é—á—ë–Ω.');
    process.exit(1);
}

const webAppUrl = "https://verdant-jalebi-a3725c.netlify.app/";

const bot = new TelegramApi(token, { polling: true });

const userSessions = {};

const start = () => {
    bot.setMyCommands([
        { command: "/start", description: "–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞" },
        { command: "/object", description: "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∑–∞–º–µ—Ä" },
        { command: "/manager", description: "–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º" },
        { command: "/adress", description: "–ê–¥—Ä–µ—Å –æ—Ñ–∏—Å–æ–≤" },
        { command: "/catalog", description: "–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–∞–ª–æ–≥" },
        { command: "/menu", description: "–ú–µ–Ω—é" },

    ])
    bot.on('message', async msg => {
        const text = msg.text;
        const chatId = msg.chat.id;
        const userName = msg.chat.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';

        if (text === '/start') {
            await bot.sendMessage(chatId, `üëã –ü—Ä–∏–≤–µ—Ç, ${userName}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ï–≤—Ä–æ—Å—Ç—Ä–æ–π. –í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ç–µ–º—É:`, {
                reply_markup: {
                    keyboard: [
                        ['–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∑–∞–º–µ—Ä'],
                        ['–ó–∞–º–µ—Ä —Ñ–æ—Ä–º–∞'],
                        ['–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥', '–ö—É–ø–∏—Ç—å –ø–ª–∏—Ç–∫—É'],
                        ['–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–∞–ª–æ–≥', '–ê–¥—Ä–µ—Å–∞ –æ—Ñ–∏—Å–æ–≤'],
                        ['–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é']
                    ],
                    resize_keyboard: true
                }
            });
        }

        if (text === '/menu') {
            await bot.sendMessage(chatId, `üìã –ú–µ–Ω—é –±–æ—Ç–∞`, {
                reply_markup: {
                    keyboard: [
                        ['–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∑–∞–º–µ—Ä'],
                        ['–ó–∞–º–µ—Ä —Ñ–æ—Ä–º–∞'],
                        ['–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥', '–ö—É–ø–∏—Ç—å –ø–ª–∏—Ç–∫—É'],
                        ['–ö–æ–Ω—Ç–∞–∫—Ç', '–ê–¥—Ä–µ—Å–∞ –æ—Ñ–∏—Å–æ–≤'],
                        ['–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é']
                    ],
                    resize_keyboard: true
                }
            });
        }

        if (text === '–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é') {
            await bot.sendMessage(chatId, `–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ. –ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Å–Ω–æ–≤–∞, –≤–≤–µ–¥–∏—Ç–µ /menu.`, {
                reply_markup: {
                    remove_keyboard: true,

                }
            });
        }

        if (text === '–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–∞–ª–æ–≥') {
            await bot.sendMessage(chatId, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞—à–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ –Ω–∞ WhatsApp", {
                reply_markup: {
                    remove_keyboard: true,

                }
            });
        }


        if (text === '–ó–∞–º–µ—Ä —Ñ–æ—Ä–º–∞') {
            await bot.sendMessage(chatId, "–ó–∞–ø–æ–ª–Ω–∏ —Ñ–æ—Ä–º—É", {
                reply_markup: {
                    keyboard: [
                        [{ text: '–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É', web_app: { url: webAppUrl } }]

                    ]

                }
            });
        }


        if (text === '–ê–¥—Ä–µ—Å–∞ –æ—Ñ–∏—Å–æ–≤') {
            await bot.sendMessage(chatId, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –æ—Ñ–∏—Å", {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: '–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É', callback_data: 'address_Rostov' }],
                        [{ text: '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä', callback_data: 'address_Krasnodar' }],
                        [{ text: '–°–æ—á–∏', callback_data: 'address_Sochi' }],
                        [{ text: '–ú–æ—Å–∫–≤–∞', callback_data: 'address_Moscow' }],
                    ]

                }
            });
        }

        if (text === '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∑–∞–º–µ—Ä') {
            userSessions[chatId] = { step: 'region' };

            await bot.sendMessage(chatId, '–£–∫–∞–∂–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω:', {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: '–†–æ—Å—Ç–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', callback_data: '–†–æ—Å—Ç–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å' }],
                        [{ text: '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π', callback_data: '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π' }],
                        [{ text: '–°–æ—á–∏', callback_data: '–°–æ—á–∏' }],
                        [{ text: '–î—Ä—É–≥–æ–π', callback_data: '–î—Ä—É–≥–æ–π' }],
                        [{ text: '–ó–∞–∫—Ä—ã—Ç—å –ú–µ–Ω—é', callback_data: 'closeMenu' }]
                    ]
                }
            });
        }

        if (userSessions[chatId]?.step === 'area') {
            userSessions[chatId].area = text;
            userSessions[chatId].step = 'phone';
            await bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:');
            return;
        }

        if (userSessions[chatId]?.step === 'phone') {
            userSessions[chatId].phone = text;

            const { region, area, phone } = userSessions[chatId];
            await bot.sendMessage(chatId, `‚úÖ –ì–æ—Ç–æ–≤–æ! –°–∫–æ—Ä–æ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏.
    üìç –†–µ–≥–∏–æ–Ω: ${region}
    üìè –ü–ª–æ—â–∞–¥—å: ${area} –º2
    üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}`);

            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ amoCRM
            console.log(userSessions[chatId])
            delete userSessions[chatId];
            return;
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–∞
    bot.on('callback_query', async query => {
        const chatId = query.message.chat.id;
        const region = query.data;

        if (region === 'closeMenu') {
            await bot.sendMessage(chatId, '–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ.', {
                reply_markup: { remove_keyboard: true }
            });
            return;
        }

        if (userSessions[chatId]) {
            userSessions[chatId].region = region;
            userSessions[chatId].step = 'area';

            await bot.sendMessage(chatId, '–£–∫–∞–∂–∏—Ç–µ –ø–ª–æ—â–∞–¥—å –≤ –º¬≤:');
        }
    })

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –∞–¥—Ä–µ—Å–æ–≤
    bot.on('callback_query', async query => {
        const chatId = query.message.chat.id;
        const data = query.data;

        const addresses = {
            address_Rostov: {
                text: 'üìç –†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É: –¢—Ä–æ–ª–ª–µ–π–±—É—Å–Ω–∞—è —É–ª–∏—Ü–∞, 16–í',
                location: { latitude: 47.266857, longitude: 39.765327 }
            },
            address_Krasnodar: {
                text: 'üìç –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä: –í–æ—Å—Ç–æ—á–Ω–æ-–ö—Ä—É–≥–ª–∏–∫–æ–≤—Å–∫–∞—è —É–ª., 42/3–∫1,',
                location: { latitude: 45.052609, longitude: 39.028828 }
            },
            address_Sochi: {
                text: 'üìç –°–æ—á–∏: –ê—Ä–º—è–Ω—Å–∫–∏–π –ø–µ—Ä. 1',
                location: { latitude: 43.641917, longitude: 39.749220 }
            },
            address_Moscow: {
                text: 'üìç –ú–æ—Å–∫–≤–∞: —É–ª. –ë–æ–ª—å—à–∞—è –Ø–∫–∏–º–∞–Ω–∫–∞, 38',
                location: { latitude: 55.734532, longitude: 37.611140 }
            }
        };

        if (addresses[data]) {
            const { text, location } = addresses[data];
            await bot.sendMessage(chatId, text);
            await bot.sendLocation(chatId, location.latitude, location.longitude);
        }
    });












}
start()

